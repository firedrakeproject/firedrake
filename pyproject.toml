[project]
name = "firedrake"
# <year>.<month>.<patch>
# TODO RELEASE: remove '.dev0'
version = "2025.4.3.dev0"
description = "An automated system for the portable solution of partial differential equations using the finite element method"
readme = "README.rst"
license = "LGPL-3.0-or-later"
maintainers = [
  {name = "Pablo D. Brubeck"},
  {name = "Daiane I. Dolci"},
  {name = "David A. Ham", email = "david.ham@imperial.ac.uk"},
  {name = "Josh Hope-Collins"},
  {name = "Koki Sagiyama"},
  {name = "Connor J. Ward", email = "c.ward20@imperial.ac.uk"},
]
requires-python = ">=3.10"
dependencies = [
  "cachetools",
  "decorator<=4.4.2",
  "mpi4py>3; python_version >= '3.13'",
  "mpi4py; python_version < '3.13'",
  "fenics-ufl>=2025.1.0",
  # TODO RELEASE
  "firedrake-fiat @ git+https://github.com/firedrakeproject/fiat.git@release",
  "h5py>3.12.1",
  "libsupermesh",
  "loopy>2024.1",
  "petsc4py==3.23.4",
  "numpy",
  "packaging",
  "pkgconfig",
  "progress",
  "pyadjoint-ad>=2025.04.1",
  "pycparser",
  "pytools[siphash]",
  "requests",
  "rtree>=1.2",
  "scipy",
  "sympy",
  "islpy>=2025.1.5; sys_platform == 'darwin'",
  "vtk",
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Operating System :: Unix",
]

[project.urls]
Homepage = "https://firedrakeproject.org"
Repository = "https://github.com/firedrakeproject/firedrake"
Issues = "https://github.com/firedrakeproject/firedrake/issues/new/choose"

[project.scripts]
firedrake-clean = "firedrake.scripts.firedrake_clean:main"
firedrake-preprocess-bibtex = "firedrake.scripts.firedrake_preprocess_bibtex:main"
firedrake-status = "firedrake.scripts.firedrake_status:main"
pyop2-clean = "pyop2.compilation:clear_compiler_disk_cache"


[project.optional-dependencies]
check = [
  "mpi-pytest>=2025.7",
  "pytest",
]
docs = [
  "bibtexparser",
  "matplotlib",  # needed to resolve API
  "numpydoc",
  "pylit",
  "sphinx",
  "sphinx-autobuild",
  "sphinx-reredirects",
  "sphinxcontrib-bibtex",
  "sphinxcontrib-jquery",
  "sphinxcontrib-svg2pdfconverter",
  "sphinxcontrib-youtube",
  "sphinx-copybutton",
]
jax = [
  "jax",
]
netgen = [
  "ngsPETSc",
]
slepc = [
  "slepc4py==3.23.2",
]
torch = [  # requires passing '--extra-index-url' to work
  "torch",
]

# Dependencies needed to run the full test suite
ci = [
  "ipympl",  # needed for notebook testing
  "jax",
  "matplotlib",
  "mpi-pytest>=2025.7",
  "nbval",
  "networkx",
  "ngsPETSc",
  "pdf2image",
  "pygraphviz",
  "pylit",
  "pytest",
  "pytest-split",  # needed for firedrake-run-split-tests
  "pytest-timeout",
  "pytest-xdist",
  "slepc4py==3.23.2",
  "torch",  # requires passing '--extra-index-url' to work
]
docker = [  # Used in firedrake-vanilla container
  "ipympl",  # needed for notebook testing
  "matplotlib",
  "mpi-pytest>=2025.7",
  "nbval",
  "networkx",
  "pdf2image",
  "pygraphviz",
  "pylit",
  "pytest",
  "pytest-split",  # needed for firedrake-run-split-tests
  "pytest-timeout",
  "pytest-xdist",
  "slepc4py==3.23.2",
]

[build-system]
requires = [
  "Cython>=3.0",
  "libsupermesh",
  "mpi4py>3; python_version >= '3.13'",
  "mpi4py; python_version < '3.13'",
  "numpy",
  "pkgconfig",
  "pybind11",
  "setuptools>=77.0.3",
  "petsc4py==3.23.4",
  "rtree>=1.2",
]
build-backend = "setuptools.build_meta"

# TODO: Convert firedrake-zenodo to a proper entrypoint script.
[tool.setuptools]
script-files = [
  "firedrake/scripts/firedrake-zenodo",
  "scripts/firedrake-check",
  "scripts/firedrake-run-split-tests",
  "pyop2/scripts/spydump",
]

[tool.setuptools.package-data]
# Unless specified these files will not be installed along with the
# rest of the package
firedrake = [
  "evaluate.h",
  "locate.c",
  "icons/*.png",
  "_check/**",
]
pyop2 = [
  "*.h",
  "*.pxd",
  "*.pyx",
  "codegen/c/*.c",
]

[tool.mypy]
# from https://quantlane.com/blog/type-checking-large-codebase/

# TODO: enable at some point
# disallow_untyped_calls = true
# disallow_untyped_defs = true
# disallow_incomplete_defs = true
# disallow_untyped_decorators = true
# check_untyped_defs = true

# warn_redundant_casts = true
# warn_unused_ignores = true
# warn_unused_configs = true
# show_error_codes = true

ignore_missing_imports = true
follow_imports = "silent"
disable_error_code = ["attr-defined", "import-untyped"]

exclude = ["firedrake/_check"]
