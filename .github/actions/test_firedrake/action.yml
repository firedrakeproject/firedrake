name: Run Firedrake tests
description: Run Firedrake test suite for a given amount of parallelism.
inputs:
  nprocs:
    description: Number of processes
    required: true

runs:
  using: "composite"
  steps:
    - name: Run tests (nprocs = ${{ inputs.nprocs }})
      shell: bash
      if: ${{ inputs.nprocs == 1 }}
      run: |
        . ../firedrake_venv/bin/activate
        mpispawn -nU 12 -nW ${{ inputs.nprocs }} --propagate-errcodes \
          pytest \
          --splitting-algorithm least_duration \
          --splits \$MPISPAWN_NUM_TASKS \
          --group \$MPISPAWN_TASK_ID1 \
          --timeout=1800 \
          --timeout-method=thread \
          -o faulthandler_timeout=1860 \
          --junit-xml=firedrake${{ inputs.nprocs }}_\$MPISPAWN_TASK_ID1.xml \
          -m "parallel[\$MPISPAWN_WORLD_SIZE] or not parallel" \
          -v tests/firedrake
    - name: Run tests (nprocs = ${{ inputs.nprocs }})
      shell: bash
      if: ${{ inputs.nprocs > 1 }}
      run: |
        . ../firedrake_venv/bin/activate
        mpispawn -nU 12 -nW ${{ inputs.nprocs }} --propagate-errcodes \
          pytest \
          --splitting-algorithm least_duration \
          --splits \$MPISPAWN_NUM_TASKS \
          --group \$MPISPAWN_TASK_ID1 \
          --timeout=1800 \
          --timeout-method=thread \
          -o faulthandler_timeout=1860 \
          --junit-xml=firedrake${{ inputs.nprocs }}_\$MPISPAWN_TASK_ID1.xml \
          -m parallel[\$MPISPAWN_WORLD_SIZE] \
          -v tests/firedrake
