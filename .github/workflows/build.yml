name: Build Firedrake

on:
  # Push to master or PR
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 0 * * 0'

concurrency:
  # Cancels jobs running if new commits are pushed
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: "Build Firedrake"
    # The type of runner that the job will run on
    runs-on: self-hosted
    # The docker container to use.
    container:
      image: firedrakeproject/firedrake-petscenv:latest
    strategy:
      # Don't immediately kill real if complex fails and vice versa.
      fail-fast: false
      matrix:
        include:
         - scalar-type: real
           complex: ""
           petsc_arch: default
         - scalar-type: complex
           complex: --complex
           petsc_arch: complex
    env:
      FIREDRAKE_CI_TESTS: 1
      PETSC_DIR: /home/firedrake/petsc
      PETSC_ARCH: ${{ matrix.petsc_arch }}
      OMP_NUM_THREADS: 1
      OPENBLAS_NUM_THREADS: 1
      COMPLEX: ${{ matrix.complex }}
      RDMAV_FORK_SAFE: 1
    steps:
      - uses: actions/checkout@v2
      - name: Cleanup
        if: ${{ always() }}
        run: |
          cd ..
          rm -rf firedrake_venv
      - name: Build Firedrake
        run: |
          cd ..
          ./firedrake/scripts/firedrake-install \
            $COMPLEX \
            --honour-petsc-dir \
            --venv-name firedrake_venv \
            --no-package-manager \
            --disable-ssh \
            --documentation-dependencies \
            --tinyasm \
            --torch \
            --netgen \
            --slepc \
            --install thetis \
            --install gusto \
            --install icepack \
            --install irksome \
            --install femlium || (cat firedrake-install.log && /bin/false)
      - name: Install test dependencies
        run: |
          . ../firedrake_venv/bin/activate
          python $(which firedrake-clean)
          python -m pip install pytest-cov pytest-timeout pytest-xdist pytest-timeout
          python -m pip list
      - name: Test Firedrake
        run: |
          . ../firedrake_venv/bin/activate
          echo OMP_NUM_THREADS is $OMP_NUM_THREADS
          echo OPENBLAS_NUM_THREADS is $OPENBLAS_NUM_THREADS
          python -m pytest \
            --durations=200 \
            --cov firedrake \
            --timeout=1800 \
            --timeout-method=thread \
            -o faulthandler_timeout=1860 \
            -n 12 -v tests
        timeout-minutes: 120
      - name: Test pyadjoint
        if: ${{ matrix.scalar-type == 'real' }}
        run: |
          . ../firedrake_venv/bin/activate
          cd ../firedrake_venv/src/pyadjoint
          python -m pytest \
            --durations=200 \
            --timeout=600 \
            --timeout-method=thread \
            -o faulthandler_timeout=660 \
            -n 12 -v tests/firedrake_adjoint
        timeout-minutes: 30
      - name: Cleanup
        # Belt and braces: clean up before and after the run.
        if: ${{ always() }}
        run: |
          cd ..
          rm -rf firedrake_venv

