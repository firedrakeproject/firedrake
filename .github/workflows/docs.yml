name: Check docs build cleanly

on:
  # Run on pushes to master
  push:
    branches:
      - master
  # And all pull requests
  pull_request:

concurrency:
  # Cancels jobs running if new commits are pushed
  group: >
    ${{ github.workflow }}-
    ${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_docs:
    name: Run doc build
    runs-on: ubuntu-latest
    container:
      image: firedrakeproject/firedrake-docdeps:latest
    outputs:
      conclusion: ${{ steps.report.outputs.conclusion }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: firedrake-repo

      - name: Install Firedrake
        id: install
        run: |
          : # Pass '--system-site-packages' so already installed packages can be found
          python3 -m venv --system-site-packages venv
          . venv/bin/activate
          pip uninstall -y firedrake
          pip install --verbose './firedrake-repo[docs]'

      - name: Check bibtex
        run: |
          . venv/bin/activate
          make -C firedrake-repo/docs validate-bibtex

      - name: Check documentation links
        run: |
          . venv/bin/activate
          make -C firedrake-repo/docs linkcheck

      - name: Build docs
        id: build
        if: success() || steps.install.conclusion == 'success'
        run: |
          . venv/bin/activate
          cd firedrake-repo/docs
          make html
          make latex
          make latexpdf

      - name: Copy manual to HTML tree
        id: copy
        if: success() || steps.build.conclusion == 'success'
        run: |
          cd firedrake-repo/docs
          cp build/latex/Firedrake.pdf build/html/_static/manual.pdf

      - name: Upload artifact
        id: upload
        if: success() || steps.copy.conclusion == 'success'
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: /__w/firedrake/firedrake/firedrake-repo/docs/build/html
          retention-days: 1

      - name: Report status
        id: report
        if: success() || steps.upload.conclusion == 'success'
        run: echo "conclusion=success" >> "$GITHUB_OUTPUT"

  deploy:
    name: Deploy Github pages
    needs: build_docs
    # Always run this workflow on master, even if linkcheck fails
    if: always() && github.ref == 'refs/heads/master' && needs.build_docs.outputs.conclusion == 'success'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: http://firedrakeproject.github.io/firedrake
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
