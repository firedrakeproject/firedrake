name: PyOP2

# Trigger the workflow on push or pull request,
# but only for the master branch
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      # Don't immediately kill all if one Python version fails
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
    env:
      CC: mpicc
      PETSC_DIR: ${{ github.workspace }}/petsc
      PETSC_ARCH: default
      RDMAV_FORK_SAFE: 1
      PYOP2_CI_TESTS: 1
    timeout-minutes: 60

    steps:
      - name: Install system dependencies
        shell: bash
        run: |
          sudo apt update
          sudo apt install build-essential mpich libmpich-dev \
            libblas-dev liblapack-dev gfortran libhwloc-dev libfabric-dev

      - name: Set correct Python version
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
          # By default setup-python pollutes the environment in such a way that virtual
          # environments cannot be used. This prevents us from building libsupermesh because
          # it relies on having rtree installed into a venv.
          # https://github.com/actions/setup-python/issues/851
          # https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#using-update-environment-flag
          update-environment: false

      - name: Create virtual environment
        shell: bash
        run: |
          ${{ steps.setup-python.outputs.python-path }} -m venv venv

      - name: Clone PETSc
        uses: actions/checkout@v4
        with:
          repository: firedrakeproject/petsc
          path: ${{ env.PETSC_DIR }}

      - name: Build and install PETSc
        shell: bash
        working-directory: ${{ env.PETSC_DIR }}
        run: |
          ./configure \
            --download-hdf5 \
            --with-debugging=1 \
            --with-shared-libraries=1 \
            --with-c2html=0 \
            --with-fortran-bindings=0
          make

      - name: Install libsupermesh
        shell: bash
        run: |
          source venv/bin/activate
          python -m pip install 'rtree>=1.2'
          git clone https://github.com/firedrakeproject/libsupermesh.git
          mkdir -p libsupermesh/build
          cd libsupermesh/build
          cmake .. \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_INSTALL_PREFIX="$VIRTUAL_ENV" \
            -DMPI_C_COMPILER=mpicc \
            -DMPI_CXX_COMPILER=mpicxx \
            -DMPI_Fortran_COMPILER=mpif90 \
            -DCMAKE_Fortran_COMPILER=mpif90 \
            -DMPIEXEC_EXECUTABLE=mpiexec
          make
          make install

      - name: Checkout PyOP2
        uses: actions/checkout@v4
        with:
          path: PyOP2

      - name: Install PyOP2 dependencies
        shell: bash
        working-directory: PyOP2
        run: |
          source ../venv/bin/activate
          python -m pip install -U pip
          python -m pip install -U pytest-timeout

      - name: Install PyOP2
        shell: bash
        working-directory: PyOP2
        run: |
          source ../venv/bin/activate
          export CC=mpicc
          export HDF5_DIR="$PETSC_DIR/$PETSC_ARCH"
          export HDF5_MPI=ON
          python -m pip install --no-binary h5py -v ".[test]"

      - name: Run tests
        shell: bash
        working-directory: PyOP2
        run: |
          source ../venv/bin/activate
          # Running parallel test cases separately works around a bug in pytest-mpi
          pytest -k "not parallel" --tb=native --timeout=480 --timeout-method=thread -o faulthandler_timeout=540 -v tests/pyop2
          mpiexec -n 3 pytest -k "parallel[3]" --tb=native --timeout=480 --timeout-method=thread -o faulthandler_timeout=540 -v tests/pyop2
        timeout-minutes: 10
