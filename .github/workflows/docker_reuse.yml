name: Reusable Docker workflow

on:
  workflow_call:
    inputs:
      target:
        description: 'Target docker image name to upload to'
        required: true
        type: string
      tag:
        description: 'Optional tag (defaults to `latest`)'
        required: false
        default: 'latest'
        type: string
      dockerfile:
        description: 'Path to the dockerfile required to build image'
        required: true
        type: string
    secrets:
      # Docker login information
      DOCKERHUB_USER:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  build:
    name: "Build the ${{ inputs.target }} container"
    strategy:
      fail-fast: false
      # see https://docs.docker.com/build/ci/github-actions/multi-platform/
      matrix:
        os: ["[self-hosted, Linux]", "[self-hosted, macOS]"]
        include:
          - os: [self-hosted, Linux]
            platform: linux/amd64
          - os: [self-hosted, macOS]
            platform: linux/arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Add homebrew to PATH
        if: ${{ matrix.os == '[self-hosted, macOS]' }}
        # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/workflow-commands-for-github-actions#adding-a-system-path
        run: echo "/opt/homebrew/bin" >> "$GITHUB_PATH"

      - name: Prepare environment
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push ${{ inputs.target }}
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          file: ${{ inputs.dockerfile }}
          outputs: type=image,"name=${{ env.DOCKERHUB_REPO }}",push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: [self-hosted, Linux]
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.DOCKERHUB_REPO }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.DOCKERHUB_REPO }}:firedrakeproject/${{ inputs.target }}:${{ inputs.tag }}
