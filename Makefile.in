#    Copyright (C) 2006 Imperial College London and others.
#
#    Please see the AUTHORS file in the main source directory for a full list
#    of copyright holders.
#
#    Prof. C Pain
#    Applied Modelling and Computation Group
#    Department of Earth Science and Engineering
#    Imperial College London
#
#    amcgsoftware@imperial.ac.uk
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation,
#    version 2.1 of the License.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
#    USA
ABSPATH = $(realpath $(dir $(lastword $(MAKEFILE_LIST))))

SHELL = @SHELL@

PACKAGE_NAME = @PACKAGE_NAME@

FLUIDITY = $(PACKAGE_NAME)

PROGRAM	 = ./bin/$(FLUIDITY)
FLDECOMP = ./bin/fldecomp

LIB_FLUIDITY = ./lib/lib$(FLUIDITY).a
SLIB_FLUIDITY = lib$(FLUIDITY).so

# Follow: www.gnu.org/prep/standards/html_node/Directory-Variables.html
PACKAGE_NAME = @PACKAGE_NAME@
prefix  = @prefix@
exec_prefix  = @exec_prefix@
bindir = @bindir@
libdir = @libdir@
datadir = @datadir@
docdir = @docdir@/
htmldir = @htmldir@/
pdfdir = @pdfdir@/

FC      = @FC@
FCFLAGS = @FCFLAGS@

MPIF90  = @MPIF90@
MPICC   = @MPICC@
MPICXX  = @MPICXX@

CC	= @CC@
CFLAGS	= @CPPFLAGS@ @CFLAGS@

CXX	= @CXX@
CXXFLAGS= @CPPFLAGS@ @CXXFLAGS@ -I./include

LINKER  = @LINKER@ @LDFLAGS@

FLLINKER = @FLLINKER@ @LDFLAGS@ $(FCFLAGS)

LIBS    = -L./lib -Wl,-rpath,$(ABSPATH)/lib -l$(FLUIDITY) @LIB_FEMDEM@  \
           ./lib/libvtkfortran.a ./lib/libspatialindex.a ./lib/libspud.a ./lib/libjudy.a \
           @LIBS@ @BLAS_LIBS@ -lmpi_f77

SLIBS    = -L./lib -Wl,-rpath,$(ABSPATH)/lib @LIB_FEMDEM@  \
           ./lib/libvtkfortran.a ./lib/libspatialindex.a ./lib/libspud.a ./lib/libjudy.a \
           @LIBS@ @BLAS_LIBS@ -lmpi_f77

OBJS = $(shell find . -mindepth 2 -maxdepth 2 -name '*.c' -o -name '*.cpp' -o -name '*.[fF]' -o -name '*.F90' | grep -v ^./lib | xargs)
MAKE = @MAKE@ -s

AR = @AR@

ARFLAGS	= -cr

EVAL = tools/silenteval.sh

# Thread count for make test.
THREADS=1

EXCLUDE_TAGS =
ifneq (@HAVE_ZOLTAN@,yes)
	EXCLUDE_TAGS := $(EXCLUDE_TAGS) -e zoltan
else
	EXCLUDE_TAGS := $(EXCLUDE_TAGS) -e nozoltan
endif
ifneq (@HAVE_EXODUSII@,yes)
	EXCLUDE_TAGS := $(EXCLUDE_TAGS) -e exodusii
endif

.SUFFIXES: .f90 .F90 .c .cpp .o .a

.cpp.o:
	@echo "        CXX $<"
	$(CXX) $(CXXFLAGS) -c $<

default: python_build

sub_system:   @LIB_FEMDEM@ \
	lib/libvtkfortran.a lib/libspatialindex.a \
	lib/libspud.a lib/libjudy.a include/version.h

lib/libjudy.a:
	@echo '    MKDIR lib'; mkdir -p lib
	echo '    MAKE libjudy'; $(MAKE) -C libjudy > make.log && $(MAKE) -C libjudy install >> make.log

lib/libvtkfortran.a:
	@echo '    MKDIR lib'; mkdir -p lib
	echo '    MAKE libvtkfortran'; $(MAKE) -C libvtkfortran 2>make.log 2>&1 && cp libvtkfortran/libvtkfortran.a lib/ && cp libvtkfortran/*.mod include/

lib/libspatialindex.a:
	@echo '    MKDIR lib'; mkdir -p lib
	echo '    MAKE libspatialindex'; $(MAKE) -C @SPATIALINDEXDIR@ && $(MAKE) -C @SPATIALINDEXDIR@ install >> make.log 2>&1

lib/libspud.a:
	@echo '    MKDIR lib'; mkdir -p lib
ifeq (@SPUD_ONLY@,yes)
	echo '    MAKE libspud'; $(MAKE) -C libspud && $(MAKE) -C libspud install-libspud
else
	echo '    MAKE libspud'; $(MAKE) -C libspud &&  $(MAKE) -C libspud install-libspud && cd libspud/python && python setup.py build && cd ../.. && cp libspud/python/build/lib*/libspud.so python/
endif

libfemtools: sub_system
	@echo '    MKDIR lib'; mkdir -p lib
	@echo '    MAKE debug'
	@$(MAKE) -C debug
	@echo '    MAKE libwm'
	@$(MAKE) -C libwm
	echo '    MAKE libfemtools'; $(MAKE) -C femtools libfemtools && cp femtools/libfemtools.a lib/
ifeq (@FEMDEM@,yes)
@LIB_FEMDEM@:
	@echo '    MAKE 3dfemdem library'
	@$(MAKE) -C @FLFEMDEM_PATH@
endif

include/spud.h: lib/libspud.a

include/version.h: version-info
	@bin/version-info $@

version-info:
	@$(MAKE) -C tools install-version-info

.PHONY: version-info

static: fluidity_library

shared: lib/$(SLIB_FLUIDITY).1

lib/$(SLIB_FLUIDITY).1: fluidity_library
	@echo "BUILD shared libfluidity"
	@rm -rf tmp
	@mkdir -p tmp
	@cp $(LIB_FLUIDITY) tmp
	@cd tmp; ar x lib$(FLUIDITY).a; rm lib$(FLUIDITY).a; cd ..
	@echo "    LD lib$(FLUIDITY).so"
	@$(EVAL) $(LINKER) -shared -Wl,-soname,$(SLIB_FLUIDITY).1 -o lib/$(SLIB_FLUIDITY).1 tmp/* $(SLIBS)
	@rm -rf tmp
	@cd lib; ln -sf $(SLIB_FLUIDITY).1 $(SLIB_FLUIDITY); cd ..

fltools: fluidity_library
	@$(MAKE) fldecomp
	@echo "BUILD fluidity tools"
	@cd tools; $(MAKE)

python_build: shared fltools
ifeq (@PYTHON@,yes)
	@echo "    MAKE python"
	@cd python; python setup.py build_ext --rpath=$(ABSPATH)/lib --inplace > build.log 2>&1
endif

python_clean:
	@echo "    CLEAN python"
	@cd python; rm -rf build
	@cd python/fluidity; find . -type l -name '*.so' -exec rm -f {} \;

.PHONY: scripts

scripts:
	@echo "INSTALL local scripts"
	@cd tools ; $(MAKE) scripts

fluidity_library: lib/lib$(FLUIDITY).a
lib/lib$(FLUIDITY).a: $(OBJS) sub_system scripts
	@echo "BUILD libfluidity"
	@echo "    MKDIR lib"
	@mkdir -p lib
	@echo "    MAKE debug"
	@cd debug; 	$(MAKE)
	@echo '    MAKE libwm'
	@cd libwm; $(MAKE)
	@echo "    MAKE femtools"
	@cd femtools;	$(MAKE)
	@echo "    BUILDING fluidity_library"
	@$(AR) $(ARFLAGS) lib/libfluidity.a \
debug/*.o \
libwm/*.o \
femtools/*.o

fldecomp: fluidity_library
	@echo "BUILD fldecomp"
	@echo "    MKDIR bin"
	@mkdir -p bin
	@cd fldecomp; $(MAKE)

all:
	$(MAKE) default
	$(MAKE) fltools

clean-light:
	@echo "    CLEAN debug"
	@cd debug; $(MAKE) clean
	@echo "    CLEAN libwm"
	@cd libwm; $(MAKE) clean
	@echo "    CLEAN femtools"
	@cd femtools; $(MAKE) clean
	@echo "    CLEAN femtools/tests"
	@cd femtools/tests; $(MAKE) clean
	@echo "    CLEAN tools"
	@cd tools;    $(MAKE) clean
	@echo "    CLEAN fldecomp"
	@cd fldecomp;	$(MAKE) clean
	@rm -fr bin lib

clean: clean-light clean-test python_clean clean-debian
	@echo "    CLEAN libvtkfortran"
	@cd libvtkfortran; $(MAKE) clean
	@echo "    CLEAN libjudy"
	@cd libjudy; $(MAKE) clean >> make.log 2>&1
	@echo "    CLEAN libspud"
	@cd libspud; $(MAKE) clean
	@echo "    CLEAN libspatialindex"
	@cd @SPATIALINDEXDIR@; $(MAKE) clean >> make.log
	@echo "    CLEAN libwm"
	@cd libwm; $(MAKE) clean
	@rm -fr lib*/configure.lineno include/*.mod *.cache core *.o config.status
	@find ./ \( -name work.pc \) -exec rm {} \;
	@find ./ \( -name work.pcl \) -exec rm {} \;

clean-debian:
	@echo "    CLEAN debian"
	@cd debian; rm -rf files tmp fluidity python-fluidity *.substvars *.debhelper*

clean-test:
	@echo "    CLEAN tests"
	@cd tests; rm -f *.dat

distclean: clean
	@echo "    DISTCLEAN"
	@cd @SPATIALINDEXDIR@ ; make distclean > /dev/null ; rm -rf	\
	 make.log regressiontest/mvrtree/.deps				\
	 regressiontest/rtree/.deps regressiontest/tprtree/.deps >	\
	 /dev/null
	@cd libjudy ; make distclean > /dev/null
	@cd libvtkfortran ; make distclean > /dev/null
	@cd libspud ; make distclean > /dev/null ; rm -rf		\
	 libspud.so.0 libtool diamond/build python/build > /dev/null
	@cd tools ; make distclean > /dev/null
	@rm -fr `find ./ -name config.status` `find ./ -name		\
	 config.log` share include/Judy.h include/Wm4Command.h		\
	 include/Wm4FoundationLIB.h include/Wm4FoundationPCH.h		\
	 include/Wm4Intersector.h include/Wm4Intersector1.h		\
	 include/Wm4IntrBox3Box3.h include/Wm4IntrQuad2Quad2.h		\
	 include/Wm4IntrTetrahedron3Tetrahedron3.h			\
	 include/Wm4IntrTriangle2Triangle2.h				\
	 include/Wm4IntrUtility3.h include/Wm4LinComp.h			\
	 include/Wm4Math.h include/Wm4MathMCR.h include/Wm4Memory.h	\
	 include/Wm4Plane3.h include/Wm4Platforms.h			\
	 include/Wm4Quad2.h include/Wm4Segment3.h include/Wm4System.h	\
	 include/Wm4THashSet.h include/Wm4THashTable.h			\
	 include/Wm4TMinHeap.h include/Wm4TSmallUnorderedSet.h		\
	 include/Wm4TStringHashTable.h include/Wm4TTuple.h		\
	 include/Wm4Tetrahedron3.h include/Wm4Triangle2.h		\
	 include/Wm4Triangle3.h include/Wm4Vector2.h			\
	 include/Wm4Vector3.h include/confdefs.h include/config.h	\
	 include/spatialindex include/spud include/spud.h		\
	 include/spud_enums.h include/tinystr.h include/tinyxml.h	\
	 include/version.h include/vtk.h				\
	 python/setup.py >  /dev/null
	@for i in `find ./*/ -name Makefile.in`; do rm -f `echo $$i | sed 's/.in$$//'`; done > /dev/null
	@find ./ \( -name make.log \) -exec rm -f {} \; > /dev/null
	@rm -f Makefile > /dev/null

test: python_build lint serialtest

lint:
	@flake8

serialtest:
	@cd tests; py.test

shorttest: python_build lint
	@cd tests; py.test --short

.PHONY: spudtools

spudtools:
	@cd libspud ; $(MAKE) install-spudtools
	@echo "    INSTALL spudtools"

setuputs:
	@echo "SETUP tests"
	@echo "    RMDIR bin/tests"
	@rm -rf bin/tests
	@echo "    MKDIR bin/tests"
	@mkdir -p bin/tests
	@ln -sf ../../tests/data bin/tests/data

build_unittest: fluidity_library libfemtools setuputs
	@echo "    UNITTEST libspud"
	@cd libspud/src/tests; $(MAKE) test-binaries; find bin/* -maxdepth 1 -type f -exec ln -sf ../../libspud/src/tests/{} ../../../bin/tests \;
	@echo "    UNITTEST error_measures"
	@cd femtools/tests; $(MAKE) unittest
	@echo "    UNITTEST parameterisation"

bin/spud-preprocess:
	@echo "Installing spudtools"
	@$(MAKE) -C libspud install-spudtools

schema: bin/spud-preprocess
	@echo "Rebuilding schema fluidity_options.rng"
	@./bin/spud-preprocess schemas/fluidity_options.rnc

.PHONY: makefiles

makefiles: sub_system scripts
ifneq (@GFORTRAN_4_5_OR_NEWER@,yes)
	@echo "makefile dependency generation requires gfortran (>=4.5)"
	@false
endif
	@echo "    Generating debug dependencies"
	@cd debug; 	../bin/create_makefile $(TESTOPTS)
	@echo "    Generating libwm dependencies"
	@cd libwm; ../bin/create_makefile $(TESTOPTS)
	@echo "    Generating femtools dependencies"
	@cd femtools;	../bin/create_makefile --exclude \
	"Refcount_interface_templates.F90 Refcount_templates.F90" $(TESTOPTS)
	@echo "    Cleaning up the mess"
	$(MAKE) clean-light
	@echo "    Congratulations, make makefiles succeeded!"

install: default fltools
	@mkdir -p $(DESTDIR)$(bindir) $(DESTDIR)$(docdir)/fluidity
	find bin/ -maxdepth 1 -type f -exec cp '{}' $(DESTDIR)$(bindir) \;
	rm -f $(DESTDIR)$(bindir)/spud-* $(DESTDIR)$(bindir)/diamond $(DESTDIR)$(bindir)/silenteval $(DESTDIR)$(bindir)/runut
	mkdir -p $(DESTDIR)$(datadir)/fluidity
	cp -r schemas/ $(DESTDIR)$(datadir)/fluidity/
	cd python ; python setup.py install --root=$(shell echo ${DESTDIR} | sed 's/^$$/\//') --prefix="$(prefix)" $$FLUIDITY_PYTHON_INSTALL_ARGS
	cp -r examples/ $(DESTDIR)$(docdir)/fluidity
	find $(DESTDIR)$(docdir)/fluidity/examples -type f -exec sed -i "s/\.\.\/\.\.\/\.\.\/bin\///" '{}' \;
	find $(DESTDIR)$(docdir)/fluidity/examples -type f -exec sed -i "s/\.\.\/\.\.\/bin\///" '{}' \;
	cd $(DESTDIR)$(docdir)/fluidity ; tar -czvf $(DESTDIR)$(docdir)/fluidity/examples.tar.gz examples/
	rm -rf $(DESTDIR)$(docdir)/fluidity/examples/

install-diamond:
	cd libspud; ./configure --prefix=$(DESTDIR)@prefix@; cd ../..
	cd libspud; $(MAKE) clean; cd ../..
	cd libspud; $(MAKE) install-diamond; cd ../..
	cd libspud; $(MAKE) install-dxdiff; cd ../..
	cd libspud; $(MAKE) install-spudtools; cd ../..
	cd libspud; ./configure --prefix=$(PWD); cd ../..

install-user-schemata:
	mkdir -p $(HOME)/.diamond/schemata/
	echo "Fluidity Markup Language" > $(HOME)/.diamond/schemata/flml
	echo "$(PWD)/schemas/fluidity_options.rng" >> $(HOME)/.diamond/schemata/flml
